{"version":3,"sources":["theme/theme.ts","redux/users/selectors.ts","firebase.ts","redux/users/Action.ts","hooks/useMessage.ts","components/organisms/layout/Header.tsx","redux/users/Operations.ts","components/templates/HeaderLayout.tsx","components/molecules/searchCondition.tsx","components/molecules/searchInput.tsx","components/pages/searchPaper.tsx","components/atoms/divideLineSocialButton.tsx","components/atoms/googleButton.tsx","components/atoms/twitterButton.tsx","components/organisms/user/loginInput.tsx","components/pages/UserLogin.tsx","components/organisms/user/registrationInput.tsx","components/pages/UserRegistration.tsx","components/router/Router.tsx","App.tsx","redux/store/InitialState.ts","redux/users/Reducers.ts","index.tsx","redux/store/Store.ts"],"names":["theme","extendTheme","styles","global","body","color","usersSelector","state","users","getUserName","createSelector","username","getUserState","isSignedIn","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","SIGN_UP","SIGN_IN","SIGN_OUT","useMessage","toast","useToast","showMessage","useCallback","props","title","status","duration","isClosable","position","Header","memo","selector","useSelector","userName","LoginState","dispatch","useDispatch","mx","my","align","onClick","push","src","alt","htmlWidth","_hover","cursor","signOutData","getState","signOut","then","type","payload","id","email","catch","mb","bg","borderRadius","textDecoration","opacity","HeaderLayout","children","SearchCondition","maxW","defaultV","min","max","as","fontSize","fontWeight","size","defaultValue","ml","SearchInput","w","minW","searchPaper","thisYear","Date","getFullYear","mt","mr","Array","map","i","href","isExternal","className","data-text","data-hashtags","data-url","data-lang","DivideLineSocialButton","GoogleButton","pr","justify","boxShadow","transition","p","colorScheme","TwitterButton","isFullWidth","leftIcon","shadow","LoginInput","useState","showPassword","setShowPassword","useForm","errors","formState","register","handleSubmit","onSubmit","data","signInData","password","a","signInWithEmailAndPassword","result","user","providerData","forEach","profile","userState","uid","displayName","error","code","isRequired","placeholder","required","pattern","value","message","h","UserLogin","border","borderColor","RegistrationInput","showPass","setShowPass","showPassConf","setShowPassConf","signUpData","passwordConf","createUserWithEmailAndPassword","axios","post","updateProfile","currentUser","delete","UserRegistration","Router","exact","path","component","App","initialState","UsersReducer","action","Actions","history","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8cb006e.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        color: \"#333333\"\n      }\n    }\n  }\n});\n\nexport default theme;","import { createSelector } from 'reselect'\n\nimport { Selector, Users } from './ActionType';\n\nconst usersSelector = (state: Selector) => state.users;\n\nexport const getUserName = createSelector(\n  [usersSelector],\n  (state: Users) => state.username\n)\n\nexport const getUserState = createSelector(\n  [usersSelector],\n  (state: Users) => state.isSignedIn\n)","import \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n\nimport firebase from \"firebase\";\n\n// Firebaseの接続情報をconfigオブジェクトに保持\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  // databaseURL: process.env.REACT_APP_DATABASEURL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// Authサービスを作ってエクスポート。各画面でこれを利用する\nconst auth = firebase.auth();\nexport default auth;","import { Users } from \"./ActionType\";\n\nexport const SIGN_UP = \"SIGN_UP\";\nexport const signUpAction = (userState: Omit<Users, \"isSignedIn\" | \"password\">) => {\n  return {\n    type: \"SIGN_UP\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email\n    }\n  }\n};\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState: Omit<Users, \"isSignedIn\" | \"password\">) => {\n  return {\n    type: \"SIGN_UP\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email\n    }\n  }\n};\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: false,\n      id: \"\",\n      username: \"\",\n      email: \"\"\n    }\n  }\n};","import { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\nimport { Message } from \"../redux/users/ActionType\";\n\nexport const useMessage = () => {\n  const toast = useToast();\n  const showMessage = useCallback((props: Message) => {\n    const {title, status} = props;\n    toast({\n      title,\n      status,\n      duration: 3000,\n      isClosable: true,\n      position: \"top\"\n    })\n  }, [toast])\n  return { showMessage }\n}","import { memo, VFC } from \"react\";\nimport { Button, Flex, Image, Link, Spacer } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { push } from \"connected-react-router\";\n\nimport { Selector } from \"../../../redux/users/ActionType\";\nimport { getUserName, getUserState } from \"../../../redux/users/selectors\";\nimport { signOut } from \"../../../redux/users/Operations\";\nimport { useMessage } from \"../../../hooks/useMessage\";\n\nexport const Header:VFC = memo(() => {\n  const selector = useSelector((state: Selector) => state);\n  const userName = getUserName(selector)\n  const LoginState = getUserState(selector)\n\n  const dispatch = useDispatch();\n  const { showMessage } = useMessage();\n\n  return (\n    <Flex mx={32} my={3} align=\"flex-end\">\n      <Link onClick={() => dispatch(push(\"/\"))}>\n        <Image\n          src={`${process.env.PUBLIC_URL}/PaperPicks.png`}\n          alt=\"PaperPicks Logo\"\n          htmlWidth=\"400\"\n          _hover={{cursor: \"pointer\"}}\n        />\n      </Link>\n      <Spacer />\n      {LoginState ? (\n        <>\n          <Button\n            onClick={() => dispatch(signOut({showMessage}))}\n          >ログアウト</Button>\n          <h1>{userName}</h1>\n        </>\n      ) : (\n        <>\n          <Button\n            mb={3}\n            mx={5}\n            bg=\"white\"\n            borderRadius=\"0\"\n            _hover={{textDecoration: \"underline\"}}\n            onClick={() => dispatch(push(\"/sign_up\"))}\n          >新規登録</Button>\n          <Button\n            mb={3}\n            bg=\"#406B15\"\n            color=\"white\"\n            borderRadius=\"0\"\n            _hover={{opacity: 0.8}}\n            onClick={() => dispatch(push(\"/sign_in\"))}\n          >ログイン</Button>\n        </>\n      )}\n    </Flex>\n  )\n})","import { push } from \"connected-react-router\";\nimport { Dispatch } from \"redux\";\nimport axios from \"axios\";\n\nimport auth from \"../../firebase\";\nimport { signInAction, signOutAction, signUpAction } from \"./Action\";\nimport { SignInAndUp } from \"./ActionType\";\n\n\nexport const signUp = (signUpData: SignInAndUp) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { username, email, password, showMessage } = signUpData;\n\n    if (!isSignedIn) {\n      // firebaseにユーザーを作成する\n      await auth.createUserWithEmailAndPassword(email, password)\n        .then(async (result) => {\n          await axios.post(\"http://localhost:8000/v1/users\", {username})\n            .then(async () => {\n              await result.user.updateProfile({displayName: username})\n                .then(() => {\n                  // ログインユーザー情報を取得\n                  result.user?.providerData.forEach((profile) => {\n                    // storeにユーザー情報を保存\n                    dispatch(signUpAction({\n                      id: profile?.uid,\n                      username: profile?.displayName,\n                      email: profile.email\n                    }))\n                  })\n                  // ルートパスに移動\n                  dispatch(push(\"/\"))\n                  // メッセージの表示\n                  showMessage({title: \"正常に登録できました。\", status: \"success\"});\n                }).catch(() => {\n                  showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"});\n                }\n              )\n            }\n          ).catch(async () => {\n            await auth.currentUser?.delete();\n            showMessage({title: \"ユーザーの保存に失敗しました。もう一度お試しください。\", status: \"error\"})\n          })\n        }\n        ).catch((error) => {\n          // エラーメッセージの表示\n          if (error.code === \"auth/email-already-in-use\") {\n          showMessage({title: \"このメールアドレスは既に使われています。\", status: \"error\"});\n        } else if (error.code === \"auth/weak-password\") {\n          showMessage({title: \"パスワードは6文字以上にしてください。\", status: \"error\"});\n        } else {\n          showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"});\n        }\n      })\n    }\n  }\n}\n\nexport const signIn = (signInData: Omit<SignInAndUp, \"username\">) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { email, password, showMessage } = signInData;\n\n    if (!isSignedIn) {\n      // firebaseでログイン\n      await auth.signInWithEmailAndPassword(email, password)\n        .then((result) => {\n          // ログインユーザー情報を取得\n          result.user.providerData.forEach((profile) => {\n          // storeにユーザー情報を保存\n            dispatch(signInAction({\n              id: profile.uid,\n              username: profile.displayName,\n              email\n            }))\n          });\n          // ルートパスに移動\n          dispatch(push(\"/\"))\n          // メッセージの表示\n          showMessage({title: \"正常にログインできました。\", status: \"success\"});\n        }).catch((error) => {\n          // エラーメッセージの表示\n          if (error.code === \"auth/user-not-found\") {\n            showMessage({title: \"ユーザーが見つかりません。\", status: \"error\"})\n          } else if (error.code === \"auth/wrong-password\") {\n            showMessage({title: \"パスワードが間違っています。\", status: \"error\"})\n          } else {\n            showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"})\n          }\n        }\n      )\n    }\n  }\n}\n\nexport const signOut = (signOutData: Pick<SignInAndUp, \"showMessage\">) => {\n  return (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { showMessage } = signOutData;\n\n    if (isSignedIn) {\n      // firebaseログアウト\n      auth.signOut()\n      .then(() => {\n        // signOutActionの呼び出し\n        dispatch(signOutAction());\n        // sign_inパスに移動\n        dispatch(push(\"/sign_in\"));\n        // メッセージの表示\n        showMessage({title: \"正常にログアウトされました。\", status: \"success\"});\n      }).catch(() => {\n        // エラーメッセージの表示\n        showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"});\n      })\n    } else {\n      // エラーメッセージの表示\n      showMessage({title: \"ログインしてください。\", status: \"error\"});\n    }\n  }\n}","import { memo, ReactNode } from \"react\";\nimport { VFC } from \"react\";\n\nimport { Header } from \"../organisms/layout/Header\"\n\n\ntype Props = {\n  children: ReactNode;\n}\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  )\n})","import { Box, Flex, Heading, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Text } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  title: string,\n  maxW: number,\n  defaultV: number,\n  min: number,\n  max?: number\n}\n\nexport const SearchCondition: VFC<Props> = memo((props) => {\n  const { title, maxW, defaultV, min, max } = props;\n  return (\n    <Box mb=\"4\">\n      <Heading as=\"h3\" fontSize=\"md\" fontWeight=\"normal\">{title}</Heading>\n      <Flex>\n        <NumberInput\n          size=\"xs\"\n          maxW={maxW}\n          defaultValue={defaultV}\n          min={min}\n          max={max}\n        >\n          <NumberInputField borderRadius=\"none\" />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        <Text ml=\"4\">~</Text>\n      </Flex>\n    </Box>\n  )\n})","import {Input, InputGroup, InputLeftElement, InputRightElement} from \"@chakra-ui/react\"\nimport { memo, VFC } from \"react\";\nimport { FaSearch, FaTimes } from \"react-icons/fa\";\n\n\nexport const SearchInput: VFC = memo(() => {\n  return (\n    <InputGroup>\n      <InputLeftElement\n        children={<FaSearch color=\"#EAEAEA\"/>}\n      />\n      <Input\n        w=\"60%\"\n        minW=\"880px\"\n        borderRadius=\"0\"\n        // focusBorderColor=\"#9AAE09\"\n      />\n      <InputRightElement\n        children={<FaTimes color=\"#EAEAEA\" />}\n      />\n    </InputGroup>\n  )\n})","import { Box, Center, Divider, Flex, Link, LinkBox, LinkOverlay, Text } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { FaRegBookmark } from \"react-icons/fa\";\n\nimport { SearchCondition } from \"../molecules/searchCondition\";\nimport { SearchInput } from \"../molecules/searchInput\";\n\nexport const searchPaper: VFC = memo(() => {\n  const thisYear = new Date().getFullYear()\n\n  return (\n    <Center mt={16}>\n      <Box>\n        <SearchInput />\n        <Flex mt={8}>\n          <Box w=\"20%\" mr={16}>\n            <SearchCondition title=\"期間\" maxW={20} defaultV={thisYear - 10} min={1900} max={thisYear}/>\n            <SearchCondition title=\"引用数\" maxW={14} defaultV={0} min={0} />\n            <SearchCondition title=\"Pick数\" maxW={14} defaultV={0} min={0} />\n          </Box>\n          <Box w=\"80%\">\n            {[...Array(10)].map((i) => (\n              <Box key={i}>\n                <Link\n                  fontSize=\"lg\"\n                  fontWeight=\"bold\"\n                  color=\"#0055AA\"\n                  href=\"https://www.jstage.jst.go.jp/article/niraopinion/26/0/26_26/_article/-char/ja/\"\n                  isExternal\n                >\n                  ブロックチェーンは社会をどう変えるか\n                </Link>\n                <Text fontSize=\"sm\" mt=\"2\">\n                  抄録 ブロックチェーンは 「帳簿 (台帳) のイノベーション」 といわれる. この技術を使うことで,<br />\n                  モノやカネの取引記録を確実に保管し, 信頼のおける取引を効率的かつ迅速に,<br />\n                  国境を越えて実現することが可能となる. また, 政府もデータベースにある国民の個人情報を …\n                </Text>\n                <Flex align=\"center\">\n                  <Text fontSize=\"xs\" mt={1} color=\"#406B15\">\n                    論文太郎, 論文花子, 他3人・2015年・NIRAオピニオンペーパー\n                  </Text>\n                  <Text fontSize=\"xs\" mt={1} mx={3}>\n                    <Flex align=\"center\">\n                      <LinkBox>\n                        <Flex align=\"center\">\n                          <FaRegBookmark />\n                          <LinkOverlay href=\"#\" ml={0.5} _hover={{textDecoration: \"underline\"}}>Pick数: 10</LinkOverlay>\n                        </Flex>\n                      </LinkBox>\n                      <Text mx={2}>引用数: 10</Text>\n                      <Link\n                        href=\"//twitter.com/share\"\n                        className=\"twitter-share-button\"\n                        data-text=\"ブロックチェーンは社会をどう変えるか\"\n                        data-hashtags=\"PaperPicks\"\n                        data-url=\"https://www.jstage.jst.go.jp/article/niraopinion/26/0/26_26/_article/-char/ja/\"\n                        data-lang=\"ja\"\n                      >ツイート</Link>\n                    </Flex>\n                  </Text>\n                </Flex>\n                <Divider my=\"4\"/>\n              </Box>\n            ))}\n          </Box>\n        </Flex>\n      </Box>\n    </Center>\n  )\n})","import { memo } from \"react\"\nimport { Divider, Flex, Text } from \"@chakra-ui/react\"\n\nexport const DivideLineSocialButton = memo(() => {\n  return (\n    <Flex my=\"2\">\n      <Divider my=\"4\" />\n      <Text mx=\"4\" my=\"1\">or</Text>\n      <Divider my =\"4\" />\n    </Flex>\n  )\n})","import { memo } from \"react\"\nimport { Button, Flex, Image } from \"@chakra-ui/react\"\n\nexport const GoogleButton = memo(() => {\n  return (\n    <Flex\n      my={2}\n      pr={3}\n      align=\"center\"\n      justify=\"center\"\n      boxShadow=\"base\"\n      _hover={{cursor: \"pointer\", bg: \"#efefef\", transition: 3}}\n    >\n      <Image\n        src={`${process.env.PUBLIC_URL}/google.svg`}\n        alt=\"Google Logo\"\n        />\n      <Button\n        p=\"0\"\n        color=\"#333333\"\n        colorScheme=\"white\"\n      >Sign Up with Google</Button>\n    </Flex>\n  )\n})","import { memo } from \"react\"\nimport { Button } from \"@chakra-ui/react\"\nimport { FaTwitter } from \"react-icons/fa\"\n\nexport const TwitterButton = memo(() => {\n  return (\n    <Button\n      my={2}\n      colorScheme=\"twitter\"\n      borderRadius=\"0\"\n      isFullWidth\n      leftIcon={<FaTwitter />}\n      shadow=\"base\"\n    >Sign Up with Twitter</Button>\n  )\n})","import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Text } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { memo, VFC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useMessage } from \"../../../hooks/useMessage\";\nimport { signIn } from \"../../../redux/users/Operations\";\n\ntype IFormInput = {\n  email: string;\n  password: string;\n}\n\nexport const LoginInput: VFC = memo(() => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const { formState: { errors }, register, handleSubmit } = useForm<IFormInput>();\n  const dispatch = useDispatch();\n  const { showMessage } = useMessage();\n\n  const onSubmit = (data: IFormInput) => {\n    const { email, password } = data;\n    dispatch(signIn({email, password, showMessage}))\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack>\n        <FormControl isRequired>\n          <FormLabel>メールアドレス</FormLabel>\n          <Input\n            placeholder={\"メールアドレスを入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"email\", {\n              required: \"メールアドレスは必須です。\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"メールアドレス形式で入力してください。\",\n              },\n            })}\n          />\n          {\n            errors.email && errors.email.type === \"required\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレスは必須です。</Text> : errors.email && errors.email.message === \"メールアドレス形式で入力してください。\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレス形式で入力してください。</Text> :<Box h=\"1rem\"></Box>\n          }\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワードを入力してください\"}\n              size=\"lg\"\n              type={showPassword ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"password\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPassword(!showPassword)}\n              children={showPassword ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.password ? <Text fontSize=\"xs\" color=\"red.500\">※パスワードは必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n      </Stack>\n      <Button\n        mt=\"3\"\n        bg=\"#406B15\"\n        color=\"white\"\n        type=\"submit\"\n        borderRadius=\"0\"\n        _hover={{opacity: 0.8}}\n        isFullWidth\n      >ログイン</Button>\n    </form>\n  )\n})","import { Box, Center, Flex, Heading } from \"@chakra-ui/react\"\nimport { memo, VFC } from \"react\"\n\nimport { DivideLineSocialButton } from \"../atoms/divideLineSocialButton\"\nimport { GoogleButton } from \"../atoms/googleButton\"\nimport { TwitterButton } from \"../atoms/twitterButton\"\nimport { LoginInput } from \"../organisms/user/loginInput\"\n\n\nexport const UserLogin: VFC = memo(() => {\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n        <Center>\n          <Heading as=\"h1\" size=\"lg\" my=\"4\">ログイン</Heading>\n        </Center>\n        <Box mx=\"10\">\n          <LoginInput />\n          <DivideLineSocialButton />\n          <TwitterButton />\n          <GoogleButton />\n        </Box>\n      </Box>\n    </Flex>\n  )\n})","import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Text } from \"@chakra-ui/react\";\nimport { memo, useState, VFC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useMessage } from \"../../../hooks/useMessage\";\nimport { signUp } from \"../../../redux/users/Operations\";\n\ntype IFormInput = {\n  userName: string;\n  email: string;\n  password: string;\n  passwordConf: string;\n}\n\nexport const RegistrationInput: VFC = memo(() => {\n  const [showPass, setShowPass] = useState(false)\n  const [showPassConf, setShowPassConf] = useState(false)\n\n  const { formState: { errors }, register, handleSubmit } = useForm<IFormInput>();\n  const { showMessage } = useMessage();\n  const dispatch = useDispatch();\n\n  const onSubmit = (data: IFormInput) => {\n    const { userName, email, password, passwordConf } = data;\n    if (password === passwordConf) {\n      dispatch(signUp({username: userName, email, password, showMessage}));\n    } else {\n      showMessage({title: \"パスワードとパスワード（確認用）が異なります。\", status: \"error\"});\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack>\n        <FormControl isRequired>\n          <FormLabel>ユーザー名</FormLabel>\n          <Input\n            placeholder={\"ユーザー名を入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"userName\", {\n              required: true\n            })}\n          />\n          {errors.userName ? <Text fontSize=\"xs\" color=\"red.500\">※ユーザー名は必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>メールアドレス</FormLabel>\n          <Input\n            placeholder={\"メールアドレスを入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"email\", {\n              required: \"メールアドレスは必須です。\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"メールアドレス形式で入力してください。\",\n              },\n            })}\n          />\n          {\n            errors.email && errors.email.type === \"required\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレスは必須です。</Text> : errors.email && errors.email.message === \"メールアドレス形式で入力してください。\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレス形式で入力してください。</Text> :<Box h=\"1rem\"></Box>\n          }\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワードを入力してください\"}\n              size=\"lg\"\n              type={showPass ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"password\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPass(!showPass)}\n              children={showPass ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.password ? <Text fontSize=\"xs\" color=\"red.500\">※パスワードは必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード（確認用）</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワード（確認用）を入力してください\"}\n              size=\"lg\"\n              type={showPassConf ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"passwordConf\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPassConf(!showPassConf)}\n              children={showPassConf ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.passwordConf ? <Text fontSize=\"xs\" color=\"red.500\">※パスワード（確認用）は必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n      </Stack>\n      <Button\n        mt=\"3\"\n        bg=\"#406B15\"\n        color=\"white\"\n        type=\"submit\"\n        borderRadius=\"0\"\n        _hover={{opacity: 0.8}}\n        isFullWidth\n      >登録</Button>\n    </form>\n  )\n})","import { VFC } from \"react\";\nimport { Box, Center, Flex, Heading } from \"@chakra-ui/react\";\n\nimport { RegistrationInput } from \"../organisms/user/registrationInput\";\nimport { TwitterButton } from \"../atoms/twitterButton\";\nimport { DivideLineSocialButton } from \"../atoms/divideLineSocialButton\";\nimport { GoogleButton } from \"../atoms/googleButton\";\n\nexport const UserRegistration: VFC = () =>{\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n        <Center>\n          <Heading as=\"h1\" size=\"lg\" my=\"4\">新規登録</Heading>\n        </Center>\n        <Box mx=\"10\">\n          <RegistrationInput />\n          <DivideLineSocialButton />\n          <TwitterButton />\n          <GoogleButton />\n        </Box>\n      </Box>\n    </Flex>\n  )\n}","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { searchPaper } from \"../pages/searchPaper\";\nimport { UserLogin } from \"../pages/UserLogin\";\nimport { UserRegistration } from \"../pages/UserRegistration\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={searchPaper} />\n      <Route exact path=\"/sign_up\" component={UserRegistration} />\n      <Route exact path=\"/sign_in\" component={UserLogin} />\n    </Switch>\n  )\n})","import { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from './theme/theme';\nimport { HeaderLayout } from './components/templates/HeaderLayout';\nimport { Router } from './components/router/Router';\n\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <HeaderLayout>\n        <Router />\n      </HeaderLayout>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","export const initialState = {\n  users: {\n    isSignedIn: false,\n    id: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }\n}","import * as Actions from \"./Action\"\nimport { initialState } from \"../store/InitialState\"\nimport { Action } from \"./ActionType\"\n\nexport const UsersReducer = (state = initialState.users, action: Action) => {\n  switch (action.type) {\n    case Actions.SIGN_UP:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case Actions.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case Actions.SIGN_OUT:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as History from 'history'\n\nimport './index.css';\nimport App from './App';\nimport createStore from './redux/store/Store';\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from \"redux\"\nimport { connectRouter, routerMiddleware } from \"connected-react-router\"\nimport thunk from \"redux-thunk\"\nimport { History } from \"history\"\n\nimport { UsersReducer } from \"../users/Reducers\"\n\nexport default function createStore(history: History) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer\n    }),\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n}"],"sourceRoot":""}