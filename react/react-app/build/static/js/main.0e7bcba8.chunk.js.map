{"version":3,"sources":["components/molecules/LabelInput.tsx","redux/users/Action.ts","components/pages/UserRegistration.tsx","hooks/useMessage.ts","redux/users/Operations.ts","theme/theme.ts","redux/users/selectors.ts","components/organisms/layout/Header.tsx","components/templates/HeaderLayout.tsx","App.tsx","redux/store/InitialState.ts","redux/users/Reducers.ts","index.tsx","redux/store/Store.ts"],"names":["LabelInput","props","label","state","setState","isRequired","placeholder","size","m","borderRadius","onChange","e","target","value","SIGN_IN","SIGN_OUT","UserRegistration","useState","username","setUsername","email","setEmail","password","setPassword","passwordConf","setPasswordConf","dispatch","useDispatch","showMessage","toast","useToast","useCallback","title","status","duration","isClosable","position","useMessage","align","justify","h","w","border","borderColor","p","as","my","mx","mt","bg","color","onClick","signInData","getState","a","isSignedIn","users","type","payload","id","userState","push","_hover","opacity","isFullWidth","colorScheme","leftIcon","theme","extendTheme","styles","global","body","usersSelector","getUserName","createSelector","getUserState","Header","memo","selector","useSelector","userName","LoginState","src","process","alt","htmlWidth","cursor","mb","HeaderLayout","children","App","initialState","UsersReducer","action","Actions","history","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e7bcba8.chunk.js","sourcesContent":["import { FormControl, FormLabel, Input } from \"@chakra-ui/react\";\nimport { ChangeEvent, VFC } from \"react\";\n\ntype Props = {\n  label: string;\n  state: string;\n  setState: (state: string) => void;\n}\n\nexport const LabelInput: VFC<Props> = (props) => {\n  const { label, state, setState } = props;\n  const handleState = (e: ChangeEvent<HTMLInputElement>) => setState(e.target.value);\n\n  return (\n    <FormControl isRequired>\n      <FormLabel>{label}</FormLabel>\n      <Input\n        placeholder={`${label}を入力してください`}\n        size=\"lg\"\n        m=\"0\"\n        borderRadius=\"0\"\n        onChange={handleState}\n        value={state}\n      />\n    </FormControl>\n  )\n}","import { Users } from \"./ActionType\";\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState: Omit<Users, \"isSignedIn\">) => {\n  return {\n    type: \"SIGN_IN\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email,\n      password: userState.password\n    }\n  }\n};\n\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: false,\n      id: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    }\n  }\n};","import { VFC, useState } from \"react\";\nimport { Box, Button, Center, Divider, Flex, Heading, Stack, Text} from \"@chakra-ui/react\";\nimport { FaTwitter } from 'react-icons/fa'\nimport { useDispatch } from \"react-redux\";\n\nimport { LabelInput } from \"../molecules/LabelInput\";\nimport { signIn } from \"../../redux/users/Operations\";\nimport { useMessage } from \"../../hooks/useMessage\";\n\nexport const UserRegistration: VFC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConf, setPasswordConf] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { showMessage } = useMessage();\n\n  const onClickRegistration = () => {\n    if (password === passwordConf) {\n      dispatch(signIn({username: username, email: email, password: password}))\n      showMessage({title: \"正常にログインできました\", status: \"success\"})\n    } else {\n      showMessage({title: \"パスワードとパスワード（確認用）が異なります\", status: \"error\"})\n    }\n  }\n\n  return (\n    <form>\n      <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n        <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n          <Center>\n            <Heading as=\"h1\" size=\"lg\" my=\"4\">新規登録</Heading>\n          </Center>\n          <Box mx=\"10\">\n            <Stack>\n              <LabelInput label=\"ユーザー名\" state={username} setState={setUsername} />\n              <LabelInput label=\"メールアドレス\" state={email} setState={setEmail} />\n              <LabelInput label=\"パスワード\" state={password} setState={setPassword} />\n              <LabelInput label=\"パスワード（確認用）\" state={passwordConf} setState={setPasswordConf} />\n            </Stack>\n            <Button\n              mt=\"5\"\n              bg=\"#406B15\"\n              color=\"white\"\n              borderRadius=\"0\"\n              onClick={onClickRegistration}\n              _hover={{opacity: 0.8}}\n              isFullWidth\n            >登録</Button>\n            <Flex my=\"2\">\n              <Divider my=\"4\" />\n              <Text mx=\"4\" my=\"1\">or</Text>\n              <Divider my =\"4\" />\n            </Flex>\n          </Box>\n          <Flex justify=\"center\">\n            <Button\n              mx=\"4\"\n              colorScheme=\"twitter\"\n              borderRadius=\"0\"\n              size=\"sm\"\n              leftIcon={<FaTwitter />}\n            >Sign Up with Twitter</Button>\n          </Flex>\n        </Box>\n      </Flex>\n    </form>\n  )\n}","import { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\n\ntype Props = {\n  title: string,\n  status: \"info\" | \"warning\" | \"success\" | \"error\",\n}\n\nexport const useMessage = () => {\n  const toast = useToast();\n  const showMessage = useCallback((props: Props) => {\n    const {title, status} = props;\n    toast({\n      title,\n      status,\n      duration: 3000,\n      isClosable: true,\n      position: \"top\"\n    })\n  }, [toast])\n  return { showMessage }\n}","import { push } from \"connected-react-router\";\nimport { Dispatch } from \"redux\";\n\nimport { signInAction } from \"./Action\";\nimport { Users } from \"./ActionType\";\n\nexport const signIn = (signInData: Omit<Users, \"isSignedIn\" | \"id\">) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { username, email, password } = signInData;\n\n    if (!isSignedIn) {\n      dispatch(signInAction({\n        id: 1,\n        username,\n        email,\n        password\n      }))\n      dispatch(push(\"/test\"))\n    }\n  }\n}","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        color: \"#333333\"\n      }\n    }\n  }\n});\n\nexport default theme;","import { createSelector } from 'reselect'\n\nimport { Selector, Users } from './ActionType';\n\nconst usersSelector = (state: Selector) => state.users;\n\nexport const getUserName = createSelector(\n  [usersSelector],\n  (state: Users) => state.username\n)\n\nexport const getUserState = createSelector(\n  [usersSelector],\n  (state: Users) => state.isSignedIn\n)","import { memo, VFC } from \"react\";\nimport { Button, Flex, Image } from \"@chakra-ui/react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Selector } from \"../../../redux/users/ActionType\";\nimport { getUserName, getUserState } from \"../../../redux/users/selectors\";\n\nexport const Header:VFC = memo(() => {\n  const selector = useSelector((state: Selector) => state);\n  const userName = getUserName(selector)\n  const LoginState = getUserState(selector)\n\n  return (\n    <Flex mx={32} my={3} align=\"flex-end\" justify=\"space-between\">\n      <Image\n        src={`${process.env.PUBLIC_URL}/PaperPicks.png`}\n        alt=\"PaperPicks Logo\"\n        htmlWidth=\"400\"\n        _hover={{cursor: \"pointer\"}}\n      />\n      {LoginState ? (\n        <h1>{userName}</h1>\n      ) : (\n        <Button mb={3} bg=\"#406B15\" color=\"white\" borderRadius=\"0\" _hover={{opacity: 0.8}}>ログイン</Button>\n      )}\n    </Flex>\n  )\n})","import { memo, ReactNode } from \"react\";\nimport { VFC } from \"react\";\n\nimport { Header } from \"../organisms/layout/Header\"\n\n\ntype Props = {\n  children: ReactNode;\n}\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  )\n})","import React from 'react';\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport { UserRegistration } from './components/pages/UserRegistration';\nimport theme from './theme/theme';\nimport { HeaderLayout } from './components/templates/HeaderLayout';\n\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <HeaderLayout><UserRegistration /></HeaderLayout>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","export const initialState = {\n  users: {\n    isSignedIn: false,\n    id: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }\n}","import * as Actions from \"./Action\"\nimport { initialState } from \"../store/InitialState\"\nimport { Action } from \"./ActionType\"\n\nexport const UsersReducer = (state = initialState.users, action: Action) => {\n  switch (action.type) {\n    case Actions.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload\n      }\n      case Actions.SIGN_OUT:\n        return {\n          ...state,\n          ...action.payload\n        }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as History from 'history'\n\nimport './index.css';\nimport App from './App';\nimport createStore from './redux/store/Store';\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from \"redux\"\nimport { connectRouter, routerMiddleware } from \"connected-react-router\"\nimport thunk from \"redux-thunk\"\nimport { History } from \"history\"\n\nimport { UsersReducer } from \"../users/Reducers\"\n\nexport default function createStore(history: History) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer\n    }),\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n}"],"sourceRoot":""}