{"version":3,"sources":["theme/theme.ts","redux/users/selectors.ts","firebase.ts","redux/users/Action.ts","hooks/useMessage.ts","components/organisms/layout/Header.tsx","redux/users/Operations.ts","components/templates/HeaderLayout.tsx","components/pages/Page404.tsx","redux/search/Action.ts","redux/boolean/Action.ts","redux/search/Operations.ts","redux/boolean/Operations.ts","components/molecules/searchInput.tsx","components/molecules/searchCondition.tsx","components/organisms/search/condition.tsx","redux/boolean/selectors.ts","components/organisms/search/result.tsx","redux/search/selectors.ts","components/pages/searchPaper.tsx","components/atoms/divideLineSocialButton.tsx","components/atoms/googleButton.tsx","components/atoms/twitterButton.tsx","components/organisms/user/loginInput.tsx","components/pages/UserLogin.tsx","components/organisms/user/registrationInput.tsx","components/pages/UserRegistration.tsx","components/router/Router.tsx","App.tsx","redux/store/InitialState.ts","redux/users/Reducers.ts","redux/search/Reducers.ts","redux/boolean/Reducers.ts","index.tsx","redux/store/Store.ts"],"names":["theme","extendTheme","styles","global","body","color","usersSelector","state","users","getUserName","createSelector","username","getUserState","isSignedIn","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","SIGN_UP","SIGN_IN","SIGN_OUT","useMessage","toast","useToast","showMessage","useCallback","props","title","status","duration","isClosable","position","Header","memo","selector","useSelector","userName","LoginState","dispatch","useDispatch","mx","my","align","onClick","push","src","alt","htmlWidth","_hover","cursor","signOutData","getState","signOut","then","type","payload","id","email","catch","mb","bg","borderRadius","textDecoration","opacity","HeaderLayout","children","Page404","justify","h","fontWeight","SEARCH_PAPER","SKELETON","searchPapers","a","word","period","boolean","skeletonAction","axios","post","result","searchState","data","error","message","SearchInput","bool","useState","setWord","handleClickSearch","value","onChange","e","target","onKeyPress","key","handleKeyPressSearch","SearchCondition","maxW","defaultValue","min","max","setBool","as","fontSize","size","ml","mt","toggle","Condition","thisYear","periodBool","setPeriodBool","handlePeriod","w","mr","getSkeleton","Result","searchSelector","resultData","search","skeletonSelector","skeleton","map","res","i","isLoaded","href","url","isExternal","mw","abstract","height","writer","citations","className","data-text","data-hashtags","data-url","data-lang","searchPaper","Date","getFullYear","tenYearsAgo","setPeriod","useBoolean","valueAsString","DivideLineSocialButton","GoogleButton","pr","boxShadow","transition","p","colorScheme","TwitterButton","isFullWidth","leftIcon","shadow","LoginInput","showPassword","setShowPassword","useForm","errors","formState","register","handleSubmit","onSubmit","signInData","password","signInWithEmailAndPassword","user","providerData","forEach","profile","userState","uid","displayName","code","isRequired","placeholder","required","pattern","UserLogin","border","borderColor","RegistrationInput","showPass","setShowPass","showPassConf","setShowPassConf","signUpData","passwordConf","createUserWithEmailAndPassword","updateProfile","currentUser","delete","UserRegistration","Router","exact","path","component","App","initialState","UsersReducer","action","Actions","SearchPaperReducer","BooleanReducer","history","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b608b3c3.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        color: \"#333333\"\n      }\n    }\n  }\n});\n\nexport default theme;","import { createSelector } from 'reselect'\n\nimport { Selector, Users } from './ActionType';\n\nconst usersSelector = (state: Selector) => state.users;\n\nexport const getUserName = createSelector(\n  [usersSelector],\n  (state: Users) => state.username\n)\n\nexport const getUserState = createSelector(\n  [usersSelector],\n  (state: Users) => state.isSignedIn\n)","import \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n\nimport firebase from \"firebase\";\n\n// Firebaseの接続情報をconfigオブジェクトに保持\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  // databaseURL: process.env.REACT_APP_DATABASEURL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// Authサービスを作ってエクスポート。各画面でこれを利用する\nconst auth = firebase.auth();\nexport default auth;","import { Users } from \"./ActionType\";\n\nexport const SIGN_UP = \"SIGN_UP\";\nexport const signUpAction = (userState: Omit<Users, \"isSignedIn\" | \"password\">) => {\n  return {\n    type: \"SIGN_UP\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email\n    }\n  }\n};\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState: Omit<Users, \"isSignedIn\" | \"password\">) => {\n  return {\n    type: \"SIGN_UP\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email\n    }\n  }\n};\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: false,\n      id: \"\",\n      username: \"\",\n      email: \"\"\n    }\n  }\n};","import { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\nimport { Message } from \"../redux/users/ActionType\";\n\nexport const useMessage = () => {\n  const toast = useToast();\n  const showMessage = useCallback((props: Message) => {\n    const {title, status} = props;\n    toast({\n      title,\n      status,\n      duration: 3000,\n      isClosable: true,\n      position: \"top\"\n    })\n  }, [toast])\n  return { showMessage }\n}","import { memo, VFC } from \"react\";\nimport { Button, Flex, Image, Link, Spacer } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { push } from \"connected-react-router\";\n\nimport { Selector } from \"../../../redux/users/ActionType\";\nimport { getUserName, getUserState } from \"../../../redux/users/selectors\";\nimport { signOut } from \"../../../redux/users/Operations\";\nimport { useMessage } from \"../../../hooks/useMessage\";\n\nexport const Header:VFC = memo(() => {\n  const selector = useSelector((state: Selector) => state);\n  const userName = getUserName(selector)\n  const LoginState = getUserState(selector)\n\n  const dispatch = useDispatch();\n  const { showMessage } = useMessage();\n\n  return (\n    <Flex mx={32} my={3} align=\"flex-end\">\n      <Link onClick={() => dispatch(push(\"/\"))}>\n        <Image\n          src={`${process.env.PUBLIC_URL}/PaperPicks.png`}\n          alt=\"PaperPicks Logo\"\n          htmlWidth=\"400\"\n          _hover={{cursor: \"pointer\"}}\n        />\n      </Link>\n      <Spacer />\n      {LoginState ? (\n        <>\n          <Button\n            onClick={() => dispatch(signOut({showMessage}))}\n          >ログアウト</Button>\n          <h1>{userName}</h1>\n        </>\n      ) : (\n        <>\n          <Button\n            mb={3}\n            mx={5}\n            bg=\"white\"\n            borderRadius=\"0\"\n            _hover={{textDecoration: \"underline\"}}\n            onClick={() => dispatch(push(\"/sign_up\"))}\n          >新規登録</Button>\n          <Button\n            mb={3}\n            bg=\"#406B15\"\n            color=\"white\"\n            borderRadius=\"0\"\n            _hover={{opacity: 0.8}}\n            onClick={() => dispatch(push(\"/sign_in\"))}\n          >ログイン</Button>\n        </>\n      )}\n    </Flex>\n  )\n})","import { push } from \"connected-react-router\";\nimport { Dispatch } from \"redux\";\nimport axios from \"axios\";\n\nimport auth from \"../../firebase\";\nimport { signInAction, signOutAction, signUpAction } from \"./Action\";\nimport { SignInAndUp } from \"./ActionType\";\n\n\nexport const signUp = (signUpData: SignInAndUp) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { username, email, password, showMessage } = signUpData;\n\n    if (!isSignedIn) {\n      // firebaseにユーザーを作成する\n      await auth.createUserWithEmailAndPassword(email, password)\n        .then(async (result) => {\n          await axios.post(\"http://localhost:8000/v1/users\", {username})\n            .then(async () => {\n              await result.user.updateProfile({displayName: username})\n                .then(() => {\n                  // ログインユーザー情報を取得\n                  result.user?.providerData.forEach((profile) => {\n                    // storeにユーザー情報を保存\n                    dispatch(signUpAction({\n                      id: profile?.uid,\n                      username: profile?.displayName,\n                      email: profile.email\n                    }))\n                  })\n                  // ルートパスに移動\n                  dispatch(push(\"/\"))\n                  // メッセージの表示\n                  showMessage({title: \"正常に登録できました。\", status: \"success\"});\n                }).catch(() => {\n                  showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"});\n                }\n              )\n            }\n          ).catch(async () => {\n            await auth.currentUser?.delete();\n            showMessage({title: \"ユーザーの保存に失敗しました。もう一度お試しください。\", status: \"error\"})\n          })\n        }\n        ).catch((error) => {\n          // エラーメッセージの表示\n          if (error.code === \"auth/email-already-in-use\") {\n          showMessage({title: \"このメールアドレスは既に使われています。\", status: \"error\"});\n        } else if (error.code === \"auth/weak-password\") {\n          showMessage({title: \"パスワードは6文字以上にしてください。\", status: \"error\"});\n        } else {\n          showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"});\n        }\n      })\n    }\n  }\n}\n\nexport const signIn = (signInData: Omit<SignInAndUp, \"username\">) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { email, password, showMessage } = signInData;\n\n    if (!isSignedIn) {\n      // firebaseでログイン\n      await auth.signInWithEmailAndPassword(email, password)\n        .then((result) => {\n          // ログインユーザー情報を取得\n          result.user.providerData.forEach((profile) => {\n          // storeにユーザー情報を保存\n            dispatch(signInAction({\n              id: profile.uid,\n              username: profile.displayName,\n              email\n            }))\n          });\n          // ルートパスに移動\n          dispatch(push(\"/\"))\n          // メッセージの表示\n          showMessage({title: \"正常にログインできました。\", status: \"success\"});\n        }).catch((error) => {\n          // エラーメッセージの表示\n          if (error.code === \"auth/user-not-found\") {\n            showMessage({title: \"ユーザーが見つかりません。\", status: \"error\"})\n          } else if (error.code === \"auth/wrong-password\") {\n            showMessage({title: \"パスワードが間違っています。\", status: \"error\"})\n          } else {\n            showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"})\n          }\n        }\n      )\n    }\n  }\n}\n\nexport const signOut = (signOutData: Pick<SignInAndUp, \"showMessage\">) => {\n  return (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { showMessage } = signOutData;\n\n    if (isSignedIn) {\n      // firebaseログアウト\n      auth.signOut()\n      .then(() => {\n        // signOutActionの呼び出し\n        dispatch(signOutAction());\n        // sign_inパスに移動\n        dispatch(push(\"/sign_in\"));\n        // メッセージの表示\n        showMessage({title: \"正常にログアウトされました。\", status: \"success\"});\n      }).catch(() => {\n        // エラーメッセージの表示\n        showMessage({title: \"不明なエラーです。もう一度お試しください。\", status: \"error\"});\n      })\n    } else {\n      // エラーメッセージの表示\n      showMessage({title: \"ログインしてください。\", status: \"error\"});\n    }\n  }\n}","import { memo, ReactNode } from \"react\";\nimport { VFC } from \"react\";\n\nimport { Header } from \"../organisms/layout/Header\"\n\n\ntype Props = {\n  children: ReactNode;\n}\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  )\n})","import { Flex, Text } from \"@chakra-ui/react\"\nimport { memo, VFC } from \"react\"\n\nexport const Page404: VFC = memo(() => {\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Text fontWeight=\"bold\">お探しのページは存在しません。</Text>\n    </Flex>\n  )\n})","import { searchPaper } from \"./ActionType\";\n\nexport const SEARCH_PAPER = \"SEARCH_PAPER\";\nexport const searchPaperAction = (searchState: searchPaper) => {\n  return {\n    type: \"SEARCH_PAPER\",\n    payload: {\n      word: searchState.word,\n      result: searchState.result\n    }\n  }\n};\n","import { State } from \"./ActionType\";\n\nexport const SKELETON = \"SKELETON\";\nexport const skeletonAction = (state: State) => {\n  return {\n    type: \"SKELETON\",\n    payload: {\n      boolean: state.boolean\n    }\n  }\n};","import { Dispatch } from \"redux\"\nimport axios from 'axios';\nimport { searchPaperAction } from \"./Action\";\nimport { Message } from \"./ActionType\";\nimport { skeleton } from \"../boolean/Operations\";\n\ntype Props = {\n  word: string,\n  period: string | null,\n  showMessage: (props: Message) => void\n}\n\nexport const searchPapers = (props: Props) => {\n  return async (dispatch: Dispatch<any>) => {\n    const { word, period, showMessage } = props;\n    dispatch(skeleton());\n    await axios.post('http://localhost:8000/v1/search', {word, period})\n      .then((result) => {\n        dispatch(skeleton());\n        dispatch(searchPaperAction({\n          word,\n          result: result.data\n        }))\n      }).catch((error) => {\n        // 要日本語対応\n        showMessage({title: error.message, status: \"error\"})\n      })\n  }\n}","import { Dispatch } from \"react\";\nimport { skeletonAction } from \"./Action\";\n\nexport const skeleton = () => {\n  return (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const boolean = state.boolean.boolean;\n    dispatch(skeletonAction({boolean: !boolean}))\n  }\n}","import {Input, InputGroup, InputLeftElement, InputRightElement} from \"@chakra-ui/react\"\nimport { ChangeEvent, KeyboardEvent, memo, useState, VFC } from \"react\";\nimport { FaSearch, FaTimes } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useMessage } from \"../../hooks/useMessage\";\nimport { searchPapers } from \"../../redux/search/Operations\";\n\ntype Props = {\n  period: string,\n  bool: boolean\n}\n\nexport const SearchInput: VFC<Props> = memo((props) => {\n  const { period, bool } = props;\n  const [word, setWord] = useState('')\n  const dispatch = useDispatch();\n  const { showMessage } = useMessage();\n\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => setWord(e.target.value)\n\n  const handleClickSearch = () => {\n    if (bool) {\n      dispatch(searchPapers({word, period, showMessage}));\n    } else {\n      dispatch(searchPapers({word, period: \"-1\", showMessage}));\n    }\n  }\n\n  const handleKeyPressSearch = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      handleClickSearch()\n    }\n  }\n\n  const handleDeleteWord = () => {\n    setWord('')\n  }\n\n  return (\n    <InputGroup>\n      <InputLeftElement\n        children={<FaSearch color=\"#EAEAEA\"/>}\n        onClick={handleClickSearch}\n      />\n      <Input\n        borderRadius=\"0\"\n        value={word}\n        onChange={handleChangeInput}\n        onKeyPress={(e) => handleKeyPressSearch(e)}\n      />\n      {\n        word ? (\n          <InputRightElement\n            children={<FaTimes color=\"#EAEAEA\" />}\n            onClick={handleDeleteWord}\n          />\n        ) : null\n      }\n    </InputGroup>\n  )\n})","import { Box, Flex, Heading, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Text } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  title: string,\n  maxW: number,\n  value?: string,\n  defaultValue?: string,\n  min: number,\n  max?: number,\n  bool?: boolean,\n  setBool?: {\n    on: () => void,\n    off: () => void,\n    toggle: () => void\n  },\n  onChange?: (valueAsString: string) => void\n}\n\nexport const SearchCondition: VFC<Props> = memo((props) => {\n  const { title, maxW, value, defaultValue, min, max, bool=true, setBool, onChange } = props;\n  return (\n    <Box mb=\"4\">\n      <Heading as=\"h3\" fontSize=\"md\" fontWeight=\"normal\">{title}</Heading>\n      {\n        bool ? (\n          <>\n            <Flex>\n              <NumberInput\n                size=\"xs\"\n                maxW={maxW}\n                value={value}\n                defaultValue={defaultValue}\n                min={min}\n                max={max}\n                onChange={onChange}\n              >\n                <NumberInputField borderRadius=\"none\" />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n              <Text ml=\"4\">~</Text>\n            </Flex>\n            {\n              title === \"期間\" ? (\n                <Text\n                  fontSize=\"xs\"\n                  mt=\"2\"\n                  onClick={setBool?.toggle}\n                  _hover={{cursor: \"pointer\", textDecoration: \"underline\"}}\n                >\n                  条件を指定しない\n                </Text>\n              ) : null\n            }\n          </>\n        ) : (\n          <Text\n            fontSize=\"xs\"\n            mt=\"2\"\n            onClick={setBool?.toggle}\n            _hover={{cursor: \"pointer\", textDecoration: \"underline\"}}\n          >\n            条件を指定\n          </Text>\n        )\n      }\n    </Box>\n  )\n})","import { Box } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\n\nimport { SearchCondition } from \"../../molecules/searchCondition\";\n\ntype Props = {\n  period: string,\n  thisYear: number,\n  periodBool: boolean,\n  setPeriodBool: {\n    on: () => void,\n    off: () => void,\n    toggle: () => void\n  },\n  handlePeriod: (valueAsString: string) => void\n}\n\nexport const Condition: VFC<Props> = memo((props) => {\n  const { period, thisYear, periodBool, setPeriodBool, handlePeriod } = props;\n  return (\n    <Box w=\"20%\" mr={16}>\n      <SearchCondition\n        title=\"期間\"\n        maxW={20}\n        value={period}\n        min={1900}\n        max={thisYear}\n        bool={periodBool}\n        setBool={setPeriodBool}\n        onChange={handlePeriod}\n      />\n      <SearchCondition\n        title=\"引用数\"\n        maxW={14}\n        defaultValue={\"0\"}\n        min={0}\n      />\n    </Box>\n  )\n})","import { createSelector } from \"reselect\";\n\nconst booleanSelector = (boolean: boolean) => boolean;\n\nexport const getSkeleton = createSelector(\n  [booleanSelector],\n  (boolean: boolean) => boolean\n)","import { Box, Divider, Flex, Link, LinkBox, LinkOverlay, Skeleton, SkeletonText, Text } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { FaRegBookmark } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\n\nimport { Selector as SearchSelector } from \"../../../redux/search/ActionType\";\nimport { Selector as SkeletonSelector } from \"../../../redux/boolean/ActionType\";\n\nimport { searchResultSelector } from \"../../../redux/search/selectors\";\nimport { getSkeleton } from \"../../../redux/boolean/selectors\";\n\nexport const Result: VFC = memo(() => {\n  const searchSelector = useSelector((state: SearchSelector) => state);\n  const resultData = searchResultSelector(searchSelector);\n\n  const skeletonSelector = useSelector((state: SkeletonSelector) => state.boolean.boolean);\n  const skeleton = getSkeleton(skeletonSelector);\n\n  return (\n    <Box w=\"80%\">\n      {resultData.map((res, i) => (\n        <Box key={i}>\n          <Skeleton isLoaded={skeleton}>\n            <Link\n              fontSize=\"lg\"\n              fontWeight=\"bold\"\n              color=\"#0055AA\"\n              href={res.url}\n              isExternal\n            >\n              {res.title}\n            </Link>\n          </Skeleton>\n          <SkeletonText isLoaded={skeleton}>\n            <Text fontSize=\"sm\" mt=\"2\" mw=\"100%\">\n              {res.abstract}\n            </Text>\n          </SkeletonText>\n          <Skeleton isLoaded={skeleton} height=\"14px\">\n            <Flex align=\"center\">\n              <Text fontSize=\"xs\" mt={1} color=\"#406B15\">\n                {res.writer}\n              </Text>\n              <Text fontSize=\"xs\" mt={1} mx={3}>\n                <Flex align=\"center\">\n                  <LinkBox>\n                    <Flex align=\"center\">\n                      <FaRegBookmark />\n                      <LinkOverlay href=\"#\" ml={0.5} _hover={{textDecoration: \"underline\"}}>Pick数: 10</LinkOverlay>\n                    </Flex>\n                  </LinkBox>\n                  <Text mx={2}>引用数: {res.citations}</Text>\n                  <Link\n                    href=\"//twitter.com/share\"\n                    className=\"twitter-share-button\"\n                    data-text={res.title}\n                    data-hashtags=\"PaperPicks\"\n                    data-url={res.url}\n                    data-lang=\"ja\"\n                  >ツイート</Link>\n                </Flex>\n              </Text>\n            </Flex>\n          </Skeleton>\n          <Divider my=\"4\"/>\n        </Box>\n      ))}\n    </Box>\n  )\n})","import { Selector } from './ActionType';\n\nexport const searchResultSelector = (state: Selector) => state.search.result;\n","import { Box, Center, Flex, useBoolean } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { memo, VFC } from \"react\";\n\nimport { SearchInput } from \"../molecules/searchInput\";\nimport { Condition } from \"../organisms/search/condition\";\nimport { Result } from \"../organisms/search/result\";\n\nexport const searchPaper: VFC = memo(() => {\n  const thisYear = new Date().getFullYear();\n  const tenYearsAgo = `${thisYear - 10}`\n  const [period, setPeriod] = useState(tenYearsAgo);\n  const [periodBool, setPeriodBool] = useBoolean();\n\n  const handlePeriod = (valueAsString: string) => setPeriod(valueAsString);\n\n  return (\n    <Center mt={16}>\n      <Box w=\"60%\" maxW=\"880px\">\n        <SearchInput period={period} bool={periodBool} />\n        <Flex mt={8}>\n          <Condition\n            period={period}\n            thisYear={thisYear}\n            periodBool={periodBool}\n            setPeriodBool={setPeriodBool}\n            handlePeriod={handlePeriod}\n          />\n          <Result />\n        </Flex>\n      </Box>\n    </Center>\n  )\n})","import { memo } from \"react\"\nimport { Divider, Flex, Text } from \"@chakra-ui/react\"\n\nexport const DivideLineSocialButton = memo(() => {\n  return (\n    <Flex my=\"2\">\n      <Divider my=\"4\" />\n      <Text mx=\"4\" my=\"1\">or</Text>\n      <Divider my =\"4\" />\n    </Flex>\n  )\n})","import { memo } from \"react\"\nimport { Button, Flex, Image } from \"@chakra-ui/react\"\n\nexport const GoogleButton = memo(() => {\n  return (\n    <Flex\n      my={2}\n      pr={3}\n      align=\"center\"\n      justify=\"center\"\n      boxShadow=\"base\"\n      _hover={{cursor: \"pointer\", bg: \"#efefef\", transition: 3}}\n    >\n      <Image\n        src={`${process.env.PUBLIC_URL}/google.svg`}\n        alt=\"Google Logo\"\n        />\n      <Button\n        p=\"0\"\n        color=\"#333333\"\n        colorScheme=\"white\"\n      >Sign Up with Google</Button>\n    </Flex>\n  )\n})","import { memo } from \"react\"\nimport { Button } from \"@chakra-ui/react\"\nimport { FaTwitter } from \"react-icons/fa\"\n\nexport const TwitterButton = memo(() => {\n  return (\n    <Button\n      my={2}\n      colorScheme=\"twitter\"\n      borderRadius=\"0\"\n      isFullWidth\n      leftIcon={<FaTwitter />}\n      shadow=\"base\"\n    >Sign Up with Twitter</Button>\n  )\n})","import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Text } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { memo, VFC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useMessage } from \"../../../hooks/useMessage\";\nimport { signIn } from \"../../../redux/users/Operations\";\n\ntype IFormInput = {\n  email: string;\n  password: string;\n}\n\nexport const LoginInput: VFC = memo(() => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const { formState: { errors }, register, handleSubmit } = useForm<IFormInput>();\n  const dispatch = useDispatch();\n  const { showMessage } = useMessage();\n\n  const onSubmit = (data: IFormInput) => {\n    const { email, password } = data;\n    dispatch(signIn({email, password, showMessage}))\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack>\n        <FormControl isRequired>\n          <FormLabel>メールアドレス</FormLabel>\n          <Input\n            placeholder={\"メールアドレスを入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"email\", {\n              required: \"メールアドレスは必須です。\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"メールアドレス形式で入力してください。\",\n              },\n            })}\n          />\n          {\n            errors.email && errors.email.type === \"required\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレスは必須です。</Text> : errors.email && errors.email.message === \"メールアドレス形式で入力してください。\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレス形式で入力してください。</Text> :<Box h=\"1rem\"></Box>\n          }\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワードを入力してください\"}\n              size=\"lg\"\n              type={showPassword ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"password\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPassword(!showPassword)}\n              children={showPassword ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.password ? <Text fontSize=\"xs\" color=\"red.500\">※パスワードは必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n      </Stack>\n      <Button\n        mt=\"3\"\n        bg=\"#406B15\"\n        color=\"white\"\n        type=\"submit\"\n        borderRadius=\"0\"\n        _hover={{opacity: 0.8}}\n        isFullWidth\n      >ログイン</Button>\n    </form>\n  )\n})","import { Box, Center, Flex, Heading } from \"@chakra-ui/react\"\nimport { memo, VFC } from \"react\"\n\nimport { DivideLineSocialButton } from \"../atoms/divideLineSocialButton\"\nimport { GoogleButton } from \"../atoms/googleButton\"\nimport { TwitterButton } from \"../atoms/twitterButton\"\nimport { LoginInput } from \"../organisms/user/loginInput\"\n\n\nexport const UserLogin: VFC = memo(() => {\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n        <Center>\n          <Heading as=\"h1\" size=\"lg\" my=\"4\">ログイン</Heading>\n        </Center>\n        <Box mx=\"10\">\n          <LoginInput />\n          <DivideLineSocialButton />\n          <TwitterButton />\n          <GoogleButton />\n        </Box>\n      </Box>\n    </Flex>\n  )\n})","import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Text } from \"@chakra-ui/react\";\nimport { memo, useState, VFC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useMessage } from \"../../../hooks/useMessage\";\nimport { signUp } from \"../../../redux/users/Operations\";\n\ntype IFormInput = {\n  userName: string;\n  email: string;\n  password: string;\n  passwordConf: string;\n}\n\nexport const RegistrationInput: VFC = memo(() => {\n  const [showPass, setShowPass] = useState(false)\n  const [showPassConf, setShowPassConf] = useState(false)\n\n  const { formState: { errors }, register, handleSubmit } = useForm<IFormInput>();\n  const { showMessage } = useMessage();\n  const dispatch = useDispatch();\n\n  const onSubmit = (data: IFormInput) => {\n    const { userName, email, password, passwordConf } = data;\n    if (password === passwordConf) {\n      dispatch(signUp({username: userName, email, password, showMessage}));\n    } else {\n      showMessage({title: \"パスワードとパスワード（確認用）が異なります。\", status: \"error\"});\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack>\n        <FormControl isRequired>\n          <FormLabel>ユーザー名</FormLabel>\n          <Input\n            placeholder={\"ユーザー名を入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"userName\", {\n              required: true\n            })}\n          />\n          {errors.userName ? <Text fontSize=\"xs\" color=\"red.500\">※ユーザー名は必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>メールアドレス</FormLabel>\n          <Input\n            placeholder={\"メールアドレスを入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"email\", {\n              required: \"メールアドレスは必須です。\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"メールアドレス形式で入力してください。\",\n              },\n            })}\n          />\n          {\n            errors.email && errors.email.type === \"required\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレスは必須です。</Text> : errors.email && errors.email.message === \"メールアドレス形式で入力してください。\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレス形式で入力してください。</Text> :<Box h=\"1rem\"></Box>\n          }\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワードを入力してください\"}\n              size=\"lg\"\n              type={showPass ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"password\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPass(!showPass)}\n              children={showPass ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.password ? <Text fontSize=\"xs\" color=\"red.500\">※パスワードは必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード（確認用）</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワード（確認用）を入力してください\"}\n              size=\"lg\"\n              type={showPassConf ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"passwordConf\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPassConf(!showPassConf)}\n              children={showPassConf ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.passwordConf ? <Text fontSize=\"xs\" color=\"red.500\">※パスワード（確認用）は必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n      </Stack>\n      <Button\n        mt=\"3\"\n        bg=\"#406B15\"\n        color=\"white\"\n        type=\"submit\"\n        borderRadius=\"0\"\n        _hover={{opacity: 0.8}}\n        isFullWidth\n      >登録</Button>\n    </form>\n  )\n})","import { VFC } from \"react\";\nimport { Box, Center, Flex, Heading } from \"@chakra-ui/react\";\n\nimport { RegistrationInput } from \"../organisms/user/registrationInput\";\nimport { TwitterButton } from \"../atoms/twitterButton\";\nimport { DivideLineSocialButton } from \"../atoms/divideLineSocialButton\";\nimport { GoogleButton } from \"../atoms/googleButton\";\n\nexport const UserRegistration: VFC = () =>{\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n        <Center>\n          <Heading as=\"h1\" size=\"lg\" my=\"4\">新規登録</Heading>\n        </Center>\n        <Box mx=\"10\">\n          <RegistrationInput />\n          <DivideLineSocialButton />\n          <TwitterButton />\n          <GoogleButton />\n        </Box>\n      </Box>\n    </Flex>\n  )\n}","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Page404 } from \"../pages/Page404\";\nimport { searchPaper } from \"../pages/searchPaper\";\nimport { UserLogin } from \"../pages/UserLogin\";\nimport { UserRegistration } from \"../pages/UserRegistration\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={searchPaper} />\n      <Route exact path=\"/sign_up\" component={UserRegistration} />\n      <Route exact path=\"/sign_in\" component={UserLogin} />\n      <Route path=\"/*\" component={Page404} />\n    </Switch>\n  )\n})","import { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from './theme/theme';\nimport { HeaderLayout } from './components/templates/HeaderLayout';\nimport { Router } from './components/router/Router';\n\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <HeaderLayout>\n        <Router />\n      </HeaderLayout>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","export const initialState = {\n  users: {\n    isSignedIn: false,\n    id: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  },\n  searchPapers: {\n    word: \"\",\n    result: []\n  },\n  boolean: {\n    boolean: true\n  }\n}","import * as Actions from \"./Action\"\nimport { initialState } from \"../store/InitialState\"\nimport { Action } from \"./ActionType\"\n\nexport const UsersReducer = (state = initialState.users, action: Action) => {\n  switch (action.type) {\n    case Actions.SIGN_UP:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case Actions.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case Actions.SIGN_OUT:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}","import * as Actions from \"./Action\"\nimport { initialState } from \"../store/InitialState\"\nimport { Action } from \"./ActionType\"\n\nexport const SearchPaperReducer = (state = initialState.searchPapers, action: Action) => {\n  switch (action.type) {\n    case Actions.SEARCH_PAPER:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}","import { initialState } from \"../store/InitialState\"\nimport * as Actions from \"./Action\"\nimport { Action } from \"./ActionType\"\n\nexport const BooleanReducer = (state = initialState.boolean, action: Action) => {\n  switch (action.type) {\n    case Actions.SKELETON:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as History from 'history'\n\nimport './index.css';\nimport App from './App';\nimport createStore from './redux/store/Store';\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from \"redux\"\nimport { connectRouter, routerMiddleware } from \"connected-react-router\"\nimport thunk from \"redux-thunk\"\nimport { History } from \"history\"\n\nimport { UsersReducer } from \"../users/Reducers\"\nimport { SearchPaperReducer } from \"../search/Reducers\"\nimport { BooleanReducer } from \"../boolean/Reducers\"\n\nexport default function createStore(history: History) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer,\n      search: SearchPaperReducer,\n      boolean: BooleanReducer\n    }),\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n}"],"sourceRoot":""}